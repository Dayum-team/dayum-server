import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'dayum'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '--enable-preview'
}

tasks.withType(Test).configureEach {
    jvmArgs '--enable-preview'
    useJUnitPlatform()
}

tasks.withType(JavaExec).configureEach {
    jvmArgs '--enable-preview'
}

tasks.withType(BootRun).configureEach {
    jvmArgs '--enable-preview'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // AWS
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-secrets-manager:3.1.0'
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.1.0'

    // Persistence
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Mapstruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    //Java CV
    implementation 'org.bytedeco:javacv-platform:1.5.10'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // apple
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37'


    implementation 'org.springframework.boot:spring-boot-starter-validation'
}
